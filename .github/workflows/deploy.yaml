name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    timeout-minutes: 30

    container:
      image: node:20-bullseye
      options: --privileged -v /var/run/docker.sock:/var/run/docker.sock

    env:
      MYSQL_USER: miage
      MYSQL_PASSWORD: JI25
      MYSQL_DATABASE: parrainage

    steps:
      - name: üõ†Ô∏è R√©cup√©rer le code du d√©p√¥t
        uses: actions/checkout@v4

      - name: üîΩ Installer Docker et Docker Compose
        run: |
          apt-get update
          apt-get install -y docker.io curl
          curl -L "https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          service docker start || true
          sleep 10

      - name: ‚úÖ V√©rifier l'installation
        run: |
          docker --version || exit 1
          docker-compose --version || exit 1
          node --version || exit 1
          npm --version || exit 1

      - name: üì¶ Installer les d√©pendances Node.js
        working-directory: ./src
        run: |
          npm ci
          npm list --depth=0

      - name: üöß Activer le mode maintenance
        run: |
          mkdir -p ./src
          touch ./src/maintenance.lock

      - name: üîß Appliquer les permissions
        run: |
          chown -R www-data:www-data ./src
          find ./src -type f -exec chmod 644 {} \;
          find ./src -type d -exec chmod 755 {} \;

      - name: üåê Configurer le r√©seau Docker
        run: docker network create my_network || true

      - name: üöÄ D√©ployer l'application
        run: |
          docker-compose down --remove-orphans
          docker-compose up -d --build --force-recreate

      - name: üìå V√©rifier le d√©ploiement
        run: |
          docker ps -a
          sleep 10
          docker logs php_8-2 --tail 50

      - name: üìù Importer la base de donn√©es
        run: |
          if [ -f "./sql/parrainage.sql" ]; then
            docker cp ./sql/parrainage.sql mysql_8:/tmp/
            docker exec mysql_8 /bin/bash -c '
              while ! mysqladmin ping -h"localhost" --silent; do
                sleep 1
              done
              mysql -u$MYSQL_USER -p$MYSQL_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE"
              mysql -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < /tmp/parrainage.sql
            '
          else
            echo "‚ö†Ô∏è Fichier SQL introuvable"
            exit 1
          fi

      - name: ‚úÖ V√©rification finale
        run: |
          docker exec mysql_8 mysql -u$MYSQL_USER -p$MYSQL_PASSWORD -e "
            SELECT COUNT(*) as tables_count 
            FROM information_schema.tables 
            WHERE table_schema = '$MYSQL_DATABASE'
          "
          rm -f ./src/maintenance.lock