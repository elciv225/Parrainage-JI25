name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    container:
      # Une image officielle Node basée sur Debian récent (glibc ≥ 2.28)
      image: node:20-bullseye
      # Optionnel mais très souvent nécessaire pour Docker-in-Docker :
      # on active le mode “privileged” et on monte le socket Docker de l’hôte
      options: --privileged -v /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: 🛠️ Récupérer le code du dépôt
        uses: actions/checkout@v3

      - name: 💁🏾‍♂️ Installer docker-compose (dernière version)
        run: |
          apt-get update
          apt-get install -y curl
          curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: 🚀 Déployer l’application sur EC2
        run: |
          # Accéder au dossier cloné par GitHub Actions dans le conteneur
          cd $GITHUB_WORKSPACE

          # Vérifier que nous sommes bien dans le bon dossier
          echo "Dossier courant : $(pwd)"
          ls -la

          # Vérifier la validité du fichier docker-compose.yaml
          docker-compose config

          # Exécuter docker-compose
          docker-compose down
          docker-compose up --build -d
